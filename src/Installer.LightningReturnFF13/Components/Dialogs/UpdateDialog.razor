@using Installer.Common.localization
@using Installer.Common.Service
@using Installer.Common.Framework.Extensions
@using Installer.Package
@inject InstallerServiceProvider InstallerServiceProvider
@inject IPackageInfo PackageInfo

<MudPaper Width="100%">
    <MudDialog Style="background-color:rgb(30 41 59)" ClassContent="bg-slate-800" ClassActions="bg-slate-800">
        <DialogContent>
            <MudContainer>
                <div class="flex gap-1">
                    <MudText Class="text-blue-300">@Localization.Localizer.Get("Messages.LocalAppVersion")</MudText>
                    <MudText>@AppVersion</MudText>
                </div>
                <div class="flex gap-1">
                    <MudText Class="text-blue-300">@Localization.Localizer.Get("Messages.DateFromServerTranslationText")</MudText>
                    <MudBadge BadgeClass="cursor-pointer" Bordered="true" Color="Color.Success" Content="@_badgeContent" OnClick="async () => await UpdatePackage()" Origin="Origin.TopCenter" Visible="@IsVisible">
                        <MudText>@ServerPackageDate.ConvertFromUnixTimestamp()</MudText>
                    </MudBadge>
                </div>
                <div class="flex gap-1">
                    <MudText Class="text-blue-300">@Localization.Localizer.Get("Messages.DateFromLocalTranslationText")</MudText>
                    <MudText>@InstalledVersion.ConvertFromUnixTimestamp()</MudText>
                </div>
            </MudContainer>
            <MudContainer Class="mt-4">
                <MudText Class="text-blue-300">Changelog: </MudText>
                <MudText>@TranslationChangelog</MudText>
            </MudContainer>
        </DialogContent>
        <DialogActions>
            <button @onclick="Cancel" class="btn-ok">
                <span>
                    Ok
                </span>
            </button>
        </DialogActions>
    </MudDialog>
</MudPaper>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public string AppVersion { get; set; } = "0";
    [Parameter] public string ServerPackageDate { get; set; } = string.Empty;
    [Parameter] public string TranslationChangelog { get; set; } = string.Empty;
    [Parameter] public string ButtonText { get; set; } = "Ok";
    [Parameter] public Color Color { get; set; }

    private bool IsVisible { get; set; }
    private long InstalledVersion { get; set; }
    private readonly string _badgeContent = Localization.Localizer.Get("HomePage.Main.UpdateDialogNewPackage");

    protected override void OnInitialized() => NewPackageVersion();

    async ValueTask UpdatePackage() {
        await PackageInfo.GetPackageTranslation();
        NewPackageVersion();
    }

    void Cancel() => MudDialog.Cancel();

    void NewPackageVersion() {
        InstalledVersion = InstallerServiceProvider.PersistenceRegister.GetInstalledTranslation();

        if (long.TryParse(ServerPackageDate, out long serverPackageDateValue) && InstalledVersion <= serverPackageDateValue) {
            IsVisible = false;
        }
        else {
            IsVisible = true;
        }

        StateHasChanged();
    }

}
